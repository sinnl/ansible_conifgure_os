---

# Tasks to configure VM once it's deployed.

- name: Set Timezne and DNS resolvers
  set_params:
    ip: "{{ ansible_default_ipv4.network }}"

- name: Set hostname to {{ vm_hostname }}
  hostname:
    name: "{{ vm_hostname }}"

- name: Create groups
  group:
    name: "{{ item }}"
    state: present
  loop:
    - ansible
    - failsafe

- name: Add Users
  user:
    name: "{{ item }}"
    comment: Automation user
    groups:
      - "{{ item }}"
      - "wheel"
    append: yes
    shell: /usr/bin/bash
    password: "$6$itluk$e5qW7SIAilQ0RzNRm4JpF5NTmj69m4G4mR0PNh9az/JMHoaxpkYFHfjUSshTzsC7wX83xG4bJflj.ch7HXtNj0"
  loop:
    - ansible
    - failsafe

- name: Push ssh key
  authorized_key:
    user: "{{ item.0 }}"
    state: present
    key: "{{ item.1 }}"
  with_together:
    - [root, ansible, failsafe]
    - ["{{ lookup('file', '/root/.ssh/id_rsa.pub') }}", "{{ lookup('file', '/home/tux/.ssh/id_rsa.pub') }}", "{{ lookup('file', '/home/failsafe/.ssh/id_rsa.pub') }}"]

- name: Allow 'wheel' group to have passwordless sudo
  lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: '^%wheel'
    line: '%wheel ALL=(ALL) NOPASSWD: ALL'
    validate: 'visudo -cf %s'

- name: Copy motd file
  copy:
    src: ../templates/motd
    dest: /etc/motd
    backup: true
  tags:
    - motd

- name: Set the timezone
  timezone:
    name: "{{ timezone }}"

- name: Generate resolv.conf
  template:
    src: resolv.j2
    dest: files/resolv.conf
  delegate_to: localhost
  loop:
    - domain1: "{{ domain1 }}"
      domain2: "{{ domain2 }}"
      dns1: "{{ dns1 }}"
      dns2: "{{ dns2 }}"
      dns3: "{{ dns3 }}"

- name: Update resolv.conf
  template:
    src: files/resolv.conf
    dest: /etc/resolv.conf
    backup: true

- name: RHEL spcyfic config
  include_tasks: rhel.yml
  when: ansible_os_family == 'RedHat'

- name: Update .bashrc
  copy:
    src: files/{{ item }}
    dest: /root/{{ item  }}
    owner: root
  with_items:
      - '.bashrc'
      - '.tmux.conf'
      - '.vimrc'

- name: Install tmux plugins
  shell: "git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm"
  ignore_errors: yes

- name: Create directory for vim plugins
  file: 
    path: /root/.vim/autoload
    state: directory
 

- name: install vim plugged
  shell: "cd /root/.vim/autoload/ && curl -O https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim"
  ignore_errors: yes

- name: Install plugins
  command: "vim \'+PlugInstall --sync\' +qall!"
  ignore_errors: yes

- name: YCME install 
  command: "cd /root/.vim/plugged/YouCompleteMe && python3 install.py &>/dev/null"
  ignore_errors: yes
